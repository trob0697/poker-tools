version: "3"
services:
  front-end-dev:
    container_name: front-end-dev
    build:
      context: ./front-end
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./front-end/src:/app/src
    environment:
      - NODE_ENV=development
  back-end-dev:
    container_name: back-end-dev
    build:
      context: ./back-end
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./back-end/src:/app/back-end/src
    env_file:
      - ./back-end/.env
    environment:
      - NODE_ENV=development
  front-end-prod:
    container_name: front-end-prod
    build:
      context: ./front-end
      dockerfile: Dockerfile.prod
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
  back-end-prod:
    container_name: back-end-prod
    build:
      context: ./back-end
      dockerfile: Dockerfile.prod
    ports:
      - "4000:4000"
    env_file:
      - ./back-end/.env
    environment:
      - NODE_ENV=production
#   database:
#     container_name: database-dev
#     image: postgres
#     ports:
#       - "5432:5432"
#     volumes:
#       - ./pgdata:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_USER: postgres
#       - POSTGRES_PASSWORD: password
#       - POSTGRES_DB: ptdb
# volumes:
#   pgdata:
  # web-dev:
  #   container_name: web-dev
  #   ports:
  #     - "2000:2000"
  #   depends_on:
  #     - front-end-dev
  #     - back-end-dev
  #     - database-dev  
